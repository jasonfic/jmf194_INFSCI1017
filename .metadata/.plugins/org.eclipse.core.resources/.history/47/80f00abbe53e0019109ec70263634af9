import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

public class ManageSongs {

	//Based on Dr. Babichenko's MusicJPA example code from the GenreManager class (same goes for other Manager classes)
	public void createSong(String title, int length, String releaseDate, String recordDate, String filePath) {
		EntityManagerFactory emFactory = Persistence.createEntityManagerFactory("jmf194_Assignment7");
		EntityManager em = emFactory.createEntityManager();
		
		em.getTransaction().begin();
		Song s = new Song();
		
		s.setTitle(title);
		s.setLength(length);
		s.setReleaseDate(releaseDate);
		s.setRecordDate(recordDate);
		s.setFilePath(filePath);
		
		em.persist(s);
		em.getTransaction().commit();
		em.close();
		emFactory.close();
	}
	
	public void updateSong(String songID, String title, int length, String releaseDate, String recordDate, String filePath) {
		EntityManagerFactory emFactory = Persistence.createEntityManagerFactory("jmf194_Assignment7");
		EntityManager em = emFactory.createEntityManager();
		em.getTransaction().begin();
		
		Song s = em.find(Song.class, songID);
		
		if (!title.equals("")) {
			s.setTitle(title);
		}
		
		if (length != 0) {
			s.setLength(length);
		}
		
		if (!releaseDate.equals("")) {
			s.setReleaseDate(releaseDate);
		}
		
		if (!recordDate.equals("")) {
			s.setRecordDate(recordDate);
		}
		
		if (!filePath.equals("")) {
			s.setFilePath(filePath);
		}
		
		em.persist(s);
		em.getTransaction().commit();		
		em.close();
		emFactory.close();
	}
	
	public void deleteSong(String songID) {
		EntityManagerFactory emFactory = Persistence.createEntityManagerFactory("jmf194_Assignment7");
		EntityManager em = emFactory.createEntityManager();
		em.getTransaction().begin();
		
		Song s = em.find(Song.class, songID);
		em.remove(s);
		em.getTransaction().commit();
		em.close();
		emFactory.close();
	}
	//finder method not shown in GenreManager example, but simple to guess what it should be
	//same thing as deleteSong method but instead of deleting, returns a song object
	public Song findSong(String songID) {
		EntityManagerFactory emFactory = Persistence.createEntityManagerFactory("jmf194_Assignment7");
		EntityManager em = emFactory.createEntityManager();
		em.getTransaction().begin();
		
		Song s = em.find(Song.class, songID);
		em.getTransaction().commit();
		em.close();
		emFactory.close();
		return s;
	}
	
}
