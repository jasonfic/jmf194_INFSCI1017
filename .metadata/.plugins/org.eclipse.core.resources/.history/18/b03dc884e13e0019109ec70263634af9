/**
 * this class deals with the song table in the music2019 database
 * it includes constructors, getters, setters, and methods to add and delete records with their relevant queries
 * @author Jason Ficorilli
 * INFSCI 1017
 * Homework 7
 * 3/5/2019
 */

import javax.persistence.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import java.sql.*;
//annotation structure based on MusicJPA code example
@Entity
@Table (name="song")
public class Song {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	
	@Column(name="song_id")
	private String songID;
	@Column(name="title")
	private String title;
	@Column(name="length")
	private int length;
	@Column(name="file_path")
	private String filePath;
	@Column(name="release_date")
	private String releaseDate;
	@Column(name="record_date")
	private String recordDate;
	@Transient						//given we aren't using queries within these classes, I didn't see the maps as being necessary
	private Map<String, Artist> songArtists = new HashMap<String, Artist>();
	//these 2 variables are leftovers from the last homework and are thus marked transient
	@Transient
	private Connection con;
	@Transient
	private PreparedStatement stmt;
	
	public Song() {
		//instead of making the user come up with an ID, I kept the UUID method implementation from previous assignments
		UUID uSongID = UUID.randomUUID();
		songID = uSongID.toString();
	}
	
	/**
	 * 
	 * @return song UUID so it can be accessed outside of class
	 */
	public String getSongID() {
		return songID;
	}
	/**
	 * 
	 * @return title of given song
	 */
	public String getTitle() {
		return title;
	}
	/**
	 * 
	 * @param title
	 */
	public void setTitle(String title) {
		this.title = title;
	}
	/**
	 * 
	 * @return length of given song in minutes
	 */
	public int getLength() {
		return length;
	}
	/**
	 * 
	 * @param length
	 */
	public void setLength(int length) {
		this.length = length;
	}
	/**
	 * 
	 * @return the location of the song file in its folder
	 */
	public String getFilePath() {
		return filePath;
	}
	/**
	 * 
	 * @param filePath
	 */
	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}
	/**
	 * 
	 * @return release date of given song
	 */
	public String getReleaseDate() {
		return releaseDate;
	}
	/**
	 * 
	 * @param releaseDate
	 */
	public void setReleaseDate(String releaseDate) {
		this.releaseDate = releaseDate;
	}
	/**
	 * 
	 * @return the date a song was recorded
	 */
	public String getRecordDate() {
		return recordDate;
	}
	/**
	 * 
	 * @param recordDate
	 */
	public void setRecordDate(String recordDate) {
		this.recordDate = recordDate;
	}
	/**
	 * 
	 * @return a HashMap object that places the key of an artist ID next to a reference to the Artist object that recorded the song
	 */
	public Map<String, Artist> getSongArtists() {
		return songArtists;
	}
	/**
	 * 
	 * @param songArtists
	 */
	public void setSongArtists(Map<String, Artist> songArtists) {
		this.songArtists = songArtists;
	}
}
